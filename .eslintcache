[{"E:\\Target_2021\\project-kides\\src\\index.js":"1","E:\\Target_2021\\project-kides\\src\\reportWebVitals.js":"2","E:\\Target_2021\\project-kides\\src\\App.js":"3","E:\\Target_2021\\project-kides\\src\\component\\navbar.js":"4","E:\\Target_2021\\project-kides\\src\\component\\tspractical.js":"5","E:\\Target_2021\\project-kides\\src\\pages\\about.js":"6","E:\\Target_2021\\project-kides\\src\\pages\\home.js":"7","E:\\Target_2021\\project-kides\\src\\pages\\error.js":"8","E:\\Target_2021\\project-kides\\src\\pages\\practice.js":"9","E:\\Target_2021\\project-kides\\src\\pages\\table.js":"10","E:\\Target_2021\\project-kides\\src\\pages\\words.js":"11","E:\\Target_2021\\project-kides\\src\\pages\\alphabets.js":"12","E:\\Target_2021\\project-kides\\src\\pages\\numbers.js":"13","E:\\Target_2021\\project-kides\\src\\component\\footer.js":"14"},{"size":606,"mtime":1613454200114,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607178084168,"results":"17","hashOfConfig":"16"},{"size":1215,"mtime":1613539800594,"results":"18","hashOfConfig":"16"},{"size":2153,"mtime":1613553111852,"results":"19","hashOfConfig":"16"},{"size":4863,"mtime":1612879993705,"results":"20","hashOfConfig":"16"},{"size":844,"mtime":1613031034319,"results":"21","hashOfConfig":"16"},{"size":506,"mtime":1611999679530,"results":"22","hashOfConfig":"16"},{"size":409,"mtime":1611940392348,"results":"23","hashOfConfig":"16"},{"size":4045,"mtime":1613557580517,"results":"24","hashOfConfig":"16"},{"size":4080,"mtime":1612794181055,"results":"25","hashOfConfig":"16"},{"size":11049,"mtime":1613233672195,"results":"26","hashOfConfig":"16"},{"size":2509,"mtime":1612777402495,"results":"27","hashOfConfig":"16"},{"size":4934,"mtime":1613039981492,"results":"28","hashOfConfig":"16"},{"size":507,"mtime":1613454194461,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"190wjy4",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Target_2021\\project-kides\\src\\index.js",[],"E:\\Target_2021\\project-kides\\src\\reportWebVitals.js",[],["71","72"],"E:\\Target_2021\\project-kides\\src\\App.js",[],["73","74"],"E:\\Target_2021\\project-kides\\src\\component\\navbar.js",[],"E:\\Target_2021\\project-kides\\src\\component\\tspractical.js",[],["75","76"],"E:\\Target_2021\\project-kides\\src\\pages\\about.js",["77","78"],"import {Row,Col,Image,Container,Jumbotron} from 'react-bootstrap';\r\n\r\nimport Navbar from '../component/navbar';\r\nimport Footer from '../component/footer';\r\nimport akshay from './AkshayMK1.jpg';\r\nimport AboutUs from './AboutUs.svg';\r\nimport './about.css';\r\n\r\nfunction About() {\r\n  return (\r\n    <div >     \r\n        <Navbar/>\r\n       <Row>\r\n           <Col>\r\n           <img className=\"about_svg\" src={AboutUs} alt=\"about us\" /> \r\n           </Col>\r\n           <Col className=\"text-center about\">\r\n\r\n           <Image className=\"profile_image\" src={akshay} thumbnail roundedCircle />    \r\n    \r\n    <br/><br/>\r\n        \r\n       <h1>Akshay Manohar Rao Kurhekar</h1>\r\n       <h2>This website is for learning purpose </h2>\r\n       \r\n           </Col>\r\n       </Row>\r\n    <Footer/>\r\n     \r\n       \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n",["79","80"],"E:\\Target_2021\\project-kides\\src\\pages\\home.js",["81","82","83","84"],"import {Row,Col,Image,Container,Jumbotron} from 'react-bootstrap';\r\nimport Practicals from '../component/tspractical';\r\nimport Navbar from '../component/navbar';\r\nimport svg from './demo.svg';\r\nimport './about.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n        <Practicals/>    \r\n        <Container>        \r\n            <h1> Home Page... </h1>\r\n        </Container>\r\n        <img src={svg} alt=\"demo svg\" width=\"300\" />        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",["85","86"],"E:\\Target_2021\\project-kides\\src\\pages\\error.js",["87"],"import {Container,Jumbotron} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport errorSvg from './error404.svg';\r\n \r\nimport './about.css';\r\n\r\nfunction Error() {\r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n          \r\n        <Container>\r\n\r\n        <img src={errorSvg} alt=\"error 404\" height=\"700\" />          \r\n\r\n        </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","E:\\Target_2021\\project-kides\\src\\pages\\practice.js",["88"],"import {React,useState,useRef} from \"react\";\r\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\r\nimport Navbar1 from '../component/navbar';\r\nimport Footer from '../component/footer';\r\nimport {Button, Nav , Navbar,Form } from 'react-bootstrap';\r\nimport './practice.css';\r\n\r\nfunction Canvas(){ \r\n\r\n    const canvasRef = useRef(null);\r\n    \r\n    const [color,setColor]=useState('#EC9418');\r\n    const [Backcolor,setBackColor]=useState('#E5FFF7');\r\n    const [strokeWidth,setStrokeWidth]=useState('4');\r\n    const [eraseWidth,setEraseWidth]=useState('8');\r\n\r\n    const eventHandel=(e)=>{\r\n        setColor(e.target.value);\r\n    }\r\n    // =========== \r\n    const penHandler = () => {\r\n        const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n        if (eraseMode) {\r\n          eraseMode(false);\r\n        }\r\n      };\r\n    \r\n      const eraserHandler = () => {\r\n        const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n        if (eraseMode) {\r\n          eraseMode(true);\r\n        }\r\n      };\r\n      const undoHandler = () => {\r\n        const undo = canvasRef.current?.undo;\r\n    \r\n        if (undo) {\r\n          undo();\r\n        }\r\n      };\r\n    \r\n      const redoHandler = () => {\r\n        const redo = canvasRef.current?.redo;\r\n    \r\n        if (redo) {\r\n          redo();\r\n        }\r\n      };\r\n    \r\n      const clearHandler = () => {\r\n        const clearCanvas = canvasRef.current?.clearCanvas;\r\n    \r\n        if (clearCanvas) {\r\n          clearCanvas();\r\n        }\r\n      };\r\n\r\n     const eraseWidthHandler = (e) =>{\r\n        setEraseWidth(e.target.value);\r\n        const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n        if (eraseMode) {\r\n          eraseMode(true);\r\n        }           \r\n     }\r\n\r\n     const penWidthHandler = (e) =>{\r\n        setStrokeWidth(e.target.value);\r\n        const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n        if (eraseMode) {\r\n          eraseMode(false);\r\n        }           \r\n    }\r\n       \r\n    return (\r\n      <div>\r\n          <Navbar1/>\r\n          <div className=\"Navbar\">\r\n    <Navbar expand=\"lg\">\r\n    <div className=\"media\">\r\n        <Button className=\"btn btn-outline-success\" onClick={()=>penHandler() }>✏️ Pen</Button>\r\n        <Button className=\"btn btn-outline-cyan\" onClick={()=>eraserHandler() }>Eraser</Button>\r\n    </div>\r\n    \r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n       \r\n        <div className=\"text-center p-3 \">\r\n          \r\n          Board Color <input className=\"m-2\" type=\"color\" value={Backcolor} onInput={(e)=>setBackColor(e.target.value) } />     \r\n         PenColor <input type=\"color\" className=\"m-2\" value={color} onInput={(e)=>eventHandel(e) } />\r\n         <Button className=\"btn btn-outline-success\" onClick={()=>penHandler() }>✏️ Pen</Button>  \r\n         <input type=\"range\" min=\"1\" max=\"50\" value={strokeWidth} onInput={(e)=>penWidthHandler(e) } /> \r\n         <Button className=\"btn btn-outline-cyan\" onClick={()=>eraserHandler() }>⬛ Eraser</Button>\r\n         <input type=\"range\" min=\"1\" max=\"80\" value={eraseWidth} onInput={(e)=> eraseWidthHandler(e)} />      \r\n         <Button className=\"btn btn-outline-orange\" onClick={()=>undoHandler() }>Undo</Button>\r\n         <Button className=\"btn btn-outline-lime \" onClick={()=>redoHandler() }>Redo</Button>\r\n         {/* <Button variant=\"outline-dark\" className=\"btn btn-warning\" onClick={()=>resetCanvasHandler() }>ReSet</Button> */}\r\n         <Button variant=\"outline-danger\" onClick={()=>clearHandler() }>Clear Bored</Button>\r\n           \r\n         </div>\r\n      </Nav>\r\n      \r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n    </div>\r\n                  \r\n        <ReactSketchCanvas\r\n          ref={canvasRef}\r\n          width=\"100em\" height=\"40rem\"\r\n          strokeWidth={strokeWidth}\r\n          strokeColor={color}\r\n          canvasColor={Backcolor}        \r\n          eraserWidth={eraseWidth}\r\n        />              \r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Canvas;","E:\\Target_2021\\project-kides\\src\\pages\\table.js",[],["89","90"],"E:\\Target_2021\\project-kides\\src\\pages\\words.js",["91","92"],"import {React, useState} from 'react';\r\nimport {Container,Tab,Tabs,Row,Col,Card,Accordion,Image} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport Footer from '../component/footer';\r\nimport GeneralWords from '../Data/words.json';\r\nimport Color from '../Data/Color.json';\r\nimport Animals from '../Data/Animals.json';\r\nimport Plants from '../Data/Plants.json';\r\nimport Flower from '../Data/Flower.json';\r\nimport Months from '../Data/Months.json';\r\nimport Days from '../Data/Days.json';\r\nimport Planets from '../Data/Planets.json';\r\nimport './about.css';\r\nimport akshay from './AkshayMK1.jpg';\r\nimport Venus from '../pages/PlanetsImg/Venus.jpg';\r\nimport Earth from '../pages/PlanetsImg/Earth.jpg';\r\n\r\n\r\nfunction ControlledTabs() {\r\n    const [key, setKey] = useState('home');\r\n    \r\n    return (\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={key}\r\n        onSelect={(k) => setKey(k)}\r\n      >\r\n        <Tab eventKey=\"home\" title=\"General Words\">\r\n        <br/>\r\n        <Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n      Top 30 \r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>\r\n      <Row> \r\n            {\r\n                GeneralWords.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    {/* <Card className=\"mb-3 card-style\">              */}\r\n                      {/* <Card.Body style={{padding:'1rem'}}> */}\r\n                        <Card.Title>\r\n                            {variant.val}\r\n                            </Card.Title>\r\n                        {/* <Card.Text>\r\n                          <Image src={variant.src} alt=\"test..\" width=\"100\" />\r\n                        </Card.Text> */}\r\n                      {/* </Card.Body>\r\n                    </Card> */}\r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n      Click me!\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>Hello! I'm another body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n       \r\n        </Tab>\r\n        <Tab eventKey=\"Animals\" title=\"Animals\">\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Animals.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem','text-align':'center'}}>\r\n                        <Card.Title>\r\n                        <Image src={akshay}  roundedCircle style={{padding:'1rem',width:'200px'}} />\r\n                                <br/>                                \r\n                            {variant.val}\r\n                            </Card.Title>                     \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Birds\" title=\"Birds\">\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Flower.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem','text-align':'center'}}>\r\n                        <Card.Title>\r\n                        <Image src={akshay}  roundedCircle style={{padding:'1rem',width:'200px'}} />\r\n                                <br/>                                \r\n                            {variant.val}\r\n                            </Card.Title>                     \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Plants\" title=\"Plants\" >\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Plants.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem','text-align':'center'}}>\r\n                        <Card.Title>\r\n                        <Image src={akshay}  roundedCircle style={{padding:'1rem',width:'200px'}} />\r\n                                <br/>                                \r\n                            {variant.val}\r\n                            </Card.Title>                     \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Flower\" title=\"Flower\" >\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Flower.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem','text-align':'center'}}>\r\n                        <Card.Title>\r\n                        <Image src={akshay}  roundedCircle style={{padding:'1rem',width:'200px'}} />\r\n                                <br/>                                \r\n                            {variant.val}\r\n                            </Card.Title>                     \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"planets\" title=\"planets\" >\r\n        <br/>\r\n        <Row>        \r\n            {\r\n               \r\n               Planets.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col text-center\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem'}}>\r\n                        <Card.Title>\r\n                        <Image src={variant.val} alt={variant.val} roundedCircle style={{padding:'1rem',width:'200px'}} />\r\n                                <br/>                                \r\n                            {variant.val}\r\n                            </Card.Title>                     \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Months\" title=\"Months\" >\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Months.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem'}}>\r\n                        <Card.Title>\r\n                        {idx+1}. {variant.val}\r\n                            </Card.Title>\r\n                         \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Days\" title=\"Days\" >\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Days.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem'}}>\r\n                        <Card.Title>\r\n                            {idx+1}. {variant.val}\r\n                            </Card.Title>\r\n                         {/* <Card.Text>\r\n                          <Image src={variant.src} alt=\"test..\" width=\"100\" />\r\n                        </Card.Text>  */}\r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Colors\" title=\"Colors\" >\r\n            <br/>\r\n        <Row> \r\n            {\r\n                Color.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem', display:'flex',direction:'row'}}>                      \r\n                        \r\n                        <Card style={{width:'70px',borderRadius:'50px', backgroundColor: variant.val}}>\r\n                               <Card.Body>\r\n                                   \r\n                                </Card.Body> \r\n                          </Card>\r\n                          <Card.Title style={{paddingLeft:'2rem'}}>\r\n                            {variant.val}\r\n                            </Card.Title>\r\n                         \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Thinks\" title=\"Thinks\" >\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Flower.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem','text-align':'center'}}>\r\n                        <Card.Title>\r\n                        <Image src={akshay}  roundedCircle style={{padding:'1rem',width:'200px'}} />\r\n                                <br/>                                \r\n                            {variant.val}\r\n                            </Card.Title>                     \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n        <Tab eventKey=\"Places\" title=\"Places\" >\r\n        <br/>\r\n        <Row> \r\n            {\r\n                Flower.map((variant, idx) => (\r\n                    <Col md=\"3\" key={idx} className=\"media-col\" >\r\n                    <Card className=\"mb-3 card-style\">             \r\n                      <Card.Body style={{padding:'1rem','text-align':'center'}}>\r\n                        <Card.Title>\r\n                        <Image src={akshay}  roundedCircle style={{padding:'1rem',width:'200px'}} />\r\n                                <br/>                                \r\n                            {variant.val}\r\n                            </Card.Title>                     \r\n                       </Card.Body>\r\n                    </Card> \r\n                    </Col>\r\n                  ))\r\n            }    \r\n            </Row>\r\n        </Tab>\r\n      </Tabs>\r\n    );\r\n  }\r\n\r\nfunction Words() {\r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n        <br/>        \r\n<Container>\r\n \r\n <br/>\r\n    <ControlledTabs/>          \r\n  \r\n</Container>\r\n<Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Words;\r\n","E:\\Target_2021\\project-kides\\src\\pages\\alphabets.js",["93","94","95"],"import {React} from 'react';\r\nimport EngData from '../Data/EngData.json';\r\nimport Data1 from '../Data/Mdata.json';\r\nimport MData from '../Data/M1data.json';\r\nimport {Container,Jumbotron,Card,Row,Col,Image} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport Footer from '../component/footer';\r\nimport './alphabets.css';\r\nimport Test from './AkshayMK1.jpg';\r\n\r\nfunction Numbers() {\r\n\r\n  return (\r\n    <div className=\"alphabets\">    \r\n        <Navbar/>\r\n        <br/>        \r\n<Container>\r\n<Card className=\"mb-3 card-style\">\r\n        <Card.Body>        \r\n    <Row>\r\n    {\r\n        EngData.map((variant, idx) => (\r\n            <Col md=\"1\" key={idx} className=\"media-col\" >\r\n            <Card className=\"mb-3 card-style\">\r\n             \r\n              <Card.Body style={{padding:'1rem'}}>\r\n                <Card.Title>{variant.val}</Card.Title>\r\n                {/* <Card.Text>\r\n                  <Image src={variant.src} alt=\"test..\" width=\"100\" />\r\n                </Card.Text> */}\r\n              </Card.Body>\r\n            </Card>\r\n            </Col>\r\n          ))\r\n    }    \r\n    </Row>\r\n    </Card.Body>\r\n    </Card>  \r\n    <br/>\r\n    <Card className=\"mb-3 card-style\">\r\n        <Card.Body>        \r\n    <Row>\r\n    {\r\n        Data1.map((variant, idx) => (\r\n            <Col md=\"1\" key={idx} className=\"media-col\" >\r\n            <Card className=\"mb-3 card-style\">             \r\n              <Card.Body style={{padding:'1rem'}}>\r\n                <Card.Title>{variant.val}</Card.Title>\r\n                {/* <Card.Text>\r\n                  <Image src={variant.src} alt=\"test..\" width=\"100\" />\r\n                </Card.Text> */}\r\n              </Card.Body>\r\n            </Card>\r\n            </Col>\r\n          ))\r\n    }    \r\n    </Row>\r\n    </Card.Body>\r\n    </Card>  \r\n    <br/>\r\n    <Card className=\"mb-3 card-style\">\r\n        <Card.Body>        \r\n    <Row>\r\n    {\r\n        MData.map((variant, idx) => (\r\n            <Col md=\"1\" key={idx} className=\"media-col\" >\r\n            <Card className=\"mb-3 card-style\">             \r\n              <Card.Body style={{padding:'1rem'}}>\r\n                <Card.Title>{variant.val}</Card.Title>\r\n                {/* <Card.Text>\r\n                  <Image src={variant.src} alt=\"test..\" width=\"100\" />\r\n                </Card.Text> */}\r\n              </Card.Body>\r\n            </Card>\r\n            </Col>\r\n          ))\r\n    }    \r\n    </Row>\r\n    </Card.Body>\r\n    </Card>  \r\n \r\n</Container>\r\n    <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Numbers;\r\n","E:\\Target_2021\\project-kides\\src\\pages\\numbers.js",["96"],"/* eslint-disable no-mixed-operators */\r\nimport {Container,Jumbotron,Card,Row,Col,Accordion} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport Footer from '../component/footer';\r\nimport './about.css';\r\n\r\nfunction Numbers() {\r\n\r\n    const arr = x => Array.from(x);\r\n    const num = x => Number(x) || 0;\r\n    \r\n    const isEmpty = xs => xs.length === 0;\r\n    const take = n => xs => xs.slice(0,n);\r\n    const drop = n => xs => xs.slice(n);\r\n    const reverse = xs => xs.slice(0).reverse();\r\n    const comp = f => g => x => f (g (x));\r\n    const not = x => !x;\r\n    const chunk = n => xs =>\r\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk (n) (drop (n) (xs))];\r\n    \r\n    // numToWords :: (Number a, String a) => a -> String\r\n    let numToWords = n => {\r\n      \r\n      let a = [\r\n        '', 'One', 'Two', 'Three', 'Four',\r\n        'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n        'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\r\n        'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\r\n      ];\r\n      \r\n      let b = [\r\n        '', '', 'Twenty', 'Thirty', 'Forty',\r\n        'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\r\n      ];\r\n      \r\n      let g = [\r\n        '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\r\n        'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\r\n      ];\r\n      \r\n      // this part is really nasty still\r\n      // it might edit this again later to show how Monoids could fix this up\r\n      let makeGroup = ([ones,tens,huns]) => {\r\n        return [\r\n          num(huns) === 0 ? '' : a[huns] + ' hundred ',\r\n          num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\r\n          a[tens+ones] || a[ones]\r\n        ].join('');\r\n    };\r\n      \r\n      let thousand = (group,i) => group === '' ? group : `${group} ${g[i]}`;\r\n      \r\n      if (typeof n === 'number')\r\n        return numToWords(String(n));\r\n      else if (n === '0')\r\n        return 'zero';\r\n      else\r\n        return comp (chunk(3)) (reverse) (arr(n))\r\n          .map(makeGroup)\r\n          .map(thousand)\r\n          .filter(comp(not)(isEmpty))\r\n          .reverse()\r\n          .join(' ');\r\n    };\r\n     \r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n        <br/>        \r\n<Container>\r\n         \r\n<Card className=\"mb-3 card-style\">\r\n        <Card.Body>        \r\n    <Row>\r\n    {[...Array(11)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n    </Card.Body>\r\n    </Card>\r\n    \r\n    <Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n      11 to 30\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(20)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i+11}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+11)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n      31 to 60\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(30)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i+31}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+31)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n      61 to 100\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"2\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(40)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'0.5rem'}}>\r\n              <Card.Title>{i+61}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+61)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n \r\n</Container>\r\n    <Footer/>        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Numbers;\r\n","E:\\Target_2021\\project-kides\\src\\component\\footer.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"99","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":23,"nodeType":"107","messageId":"108","endLine":1,"endColumn":32},{"ruleId":"105","severity":1,"message":"109","line":1,"column":33,"nodeType":"107","messageId":"108","endLine":1,"endColumn":42},{"ruleId":"97","replacedBy":"110"},{"ruleId":"99","replacedBy":"111"},{"ruleId":"105","severity":1,"message":"112","line":1,"column":9,"nodeType":"107","messageId":"108","endLine":1,"endColumn":12},{"ruleId":"105","severity":1,"message":"113","line":1,"column":13,"nodeType":"107","messageId":"108","endLine":1,"endColumn":16},{"ruleId":"105","severity":1,"message":"114","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":22},{"ruleId":"105","severity":1,"message":"109","line":1,"column":33,"nodeType":"107","messageId":"108","endLine":1,"endColumn":42},{"ruleId":"97","replacedBy":"115"},{"ruleId":"99","replacedBy":"116"},{"ruleId":"105","severity":1,"message":"109","line":1,"column":19,"nodeType":"107","messageId":"108","endLine":1,"endColumn":28},{"ruleId":"105","severity":1,"message":"117","line":5,"column":30,"nodeType":"107","messageId":"108","endLine":5,"endColumn":34},{"ruleId":"97","replacedBy":"118"},{"ruleId":"99","replacedBy":"119"},{"ruleId":"105","severity":1,"message":"120","line":15,"column":8,"nodeType":"107","messageId":"108","endLine":15,"endColumn":13},{"ruleId":"105","severity":1,"message":"121","line":16,"column":8,"nodeType":"107","messageId":"108","endLine":16,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":5,"column":19,"nodeType":"107","messageId":"108","endLine":5,"endColumn":28},{"ruleId":"105","severity":1,"message":"114","line":5,"column":42,"nodeType":"107","messageId":"108","endLine":5,"endColumn":47},{"ruleId":"105","severity":1,"message":"122","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":12},{"ruleId":"105","severity":1,"message":"109","line":2,"column":19,"nodeType":"107","messageId":"108","endLine":2,"endColumn":28},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],["123"],["124"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Jumbotron' is defined but never used.",["123"],["124"],"'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.",["123"],["124"],"'Form' is defined but never used.",["123"],["124"],"'Venus' is defined but never used.","'Earth' is defined but never used.","'Test' is defined but never used.","no-global-assign","no-unsafe-negation"]