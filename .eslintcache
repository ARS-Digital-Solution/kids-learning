[{"E:\\Target_2021\\project-kides\\src\\index.js":"1","E:\\Target_2021\\project-kides\\src\\reportWebVitals.js":"2","E:\\Target_2021\\project-kides\\src\\App.js":"3","E:\\Target_2021\\project-kides\\src\\component\\navbar.js":"4","E:\\Target_2021\\project-kides\\src\\component\\tspractical.js":"5","E:\\Target_2021\\project-kides\\src\\pages\\about.js":"6","E:\\Target_2021\\project-kides\\src\\pages\\home.js":"7","E:\\Target_2021\\project-kides\\src\\pages\\error.js":"8","E:\\Target_2021\\project-kides\\src\\pages\\practice.js":"9","E:\\Target_2021\\project-kides\\src\\pages\\table.js":"10","E:\\Target_2021\\project-kides\\src\\pages\\words.js":"11","E:\\Target_2021\\project-kides\\src\\pages\\alphabets.js":"12","E:\\Target_2021\\project-kides\\src\\pages\\numbers.js":"13","E:\\Target_2021\\project-kides\\src\\component\\footer.js":"14","E:\\Target_2021\\project-kides\\src\\Data\\Planets.js":"15","E:\\Target_2021\\project-kides\\src\\Data\\Flower.js":"16","E:\\Target_2021\\project-kides\\src\\Data\\Animals.js":"17","E:\\Target_2021\\project-kides\\src\\Data\\States.js":"18"},{"size":606,"mtime":1613454200114,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607178084168,"results":"21","hashOfConfig":"20"},{"size":1215,"mtime":1613539800594,"results":"22","hashOfConfig":"20"},{"size":1487,"mtime":1613842242923,"results":"23","hashOfConfig":"20"},{"size":4863,"mtime":1612879993705,"results":"24","hashOfConfig":"20"},{"size":1842,"mtime":1613739276224,"results":"25","hashOfConfig":"20"},{"size":2842,"mtime":1613741535114,"results":"26","hashOfConfig":"20"},{"size":409,"mtime":1611940392348,"results":"27","hashOfConfig":"20"},{"size":3925,"mtime":1613985048436,"results":"28","hashOfConfig":"20"},{"size":4080,"mtime":1612794181055,"results":"29","hashOfConfig":"20"},{"size":4791,"mtime":1614159227397,"results":"30","hashOfConfig":"20"},{"size":2468,"mtime":1613734576964,"results":"31","hashOfConfig":"20"},{"size":4944,"mtime":1613708619455,"results":"32","hashOfConfig":"20"},{"size":562,"mtime":1613740483617,"results":"33","hashOfConfig":"20"},{"size":2162,"mtime":1613655440890,"results":"34","hashOfConfig":"20"},{"size":2923,"mtime":1613717101223,"results":"35","hashOfConfig":"20"},{"size":2162,"mtime":1613664716317,"results":"36","hashOfConfig":"20"},{"size":4850,"mtime":1614166812422,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"190wjy4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Target_2021\\project-kides\\src\\index.js",[],["82","83"],"E:\\Target_2021\\project-kides\\src\\reportWebVitals.js",[],["84","85"],"E:\\Target_2021\\project-kides\\src\\App.js",[],["86","87"],"E:\\Target_2021\\project-kides\\src\\component\\navbar.js",[],"E:\\Target_2021\\project-kides\\src\\component\\tspractical.js",[],["88","89"],"E:\\Target_2021\\project-kides\\src\\pages\\about.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\home.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\error.js",["90"],"import {Container,Jumbotron} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport errorSvg from './error404.svg';\r\n \r\nimport './about.css';\r\n\r\nfunction Error() {\r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n          \r\n        <Container>\r\n\r\n        <img src={errorSvg} alt=\"error 404\" height=\"700\" />          \r\n\r\n        </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n",["91","92"],"E:\\Target_2021\\project-kides\\src\\pages\\practice.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\table.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\words.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\alphabets.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\numbers.js",["93"],"/* eslint-disable no-mixed-operators */\r\nimport {Container,Jumbotron,Card,Row,Col,Accordion} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport Footer from '../component/footer';\r\nimport './about.css';\r\n\r\nfunction Numbers() {\r\n\r\n    const arr = x => Array.from(x);\r\n    const num = x => Number(x) || 0;\r\n    \r\n    const isEmpty = xs => xs.length === 0;\r\n    const take = n => xs => xs.slice(0,n);\r\n    const drop = n => xs => xs.slice(n);\r\n    const reverse = xs => xs.slice(0).reverse();\r\n    const comp = f => g => x => f (g (x));\r\n    const not = x => !x;\r\n    const chunk = n => xs =>\r\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk (n) (drop (n) (xs))];\r\n    \r\n    // numToWords :: (Number a, String a) => a -> String\r\n    let numToWords = n => {\r\n      \r\n      let a = [\r\n        '', 'One', 'Two', 'Three', 'Four',\r\n        'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n        'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\r\n        'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\r\n      ];\r\n      \r\n      let b = [\r\n        '', '', 'Twenty', 'Thirty', 'Forty',\r\n        'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\r\n      ];\r\n      \r\n      let g = [\r\n        '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\r\n        'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\r\n      ];\r\n      \r\n      // this part is really nasty still\r\n      // it might edit this again later to show how Monoids could fix this up\r\n      let makeGroup = ([ones,tens,huns]) => {\r\n        return [\r\n          num(huns) === 0 ? '' : a[huns] + ' hundred ',\r\n          num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\r\n          a[tens+ones] || a[ones]\r\n        ].join('');\r\n    };\r\n      \r\n      let thousand = (group,i) => group === '' ? group : `${group} ${g[i]}`;\r\n      \r\n      if (typeof n === 'number')\r\n        return numToWords(String(n));\r\n      else if (n === '0')\r\n        return 'zero';\r\n      else\r\n        return comp (chunk(3)) (reverse) (arr(n))\r\n          .map(makeGroup)\r\n          .map(thousand)\r\n          .filter(comp(not)(isEmpty))\r\n          .reverse()\r\n          .join(' ');\r\n    };\r\n     \r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n        \r\n        <br/>        \r\n<Container>\r\n         \r\n<Card className=\"mb-3 card-style\">\r\n        <Card.Body>        \r\n    <Row>\r\n    {[...Array(11)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n    </Card.Body>\r\n    </Card>\r\n    \r\n    <Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n      11 to 30\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(20)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i+11}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+11)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n      31 to 60\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(30)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i+31}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+31)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n      61 to 100\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"2\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(40)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'0.5rem'}}>\r\n              <Card.Title>{i+61}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+61)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n \r\n</Container>\r\n    <Footer/>        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Numbers;\r\n","E:\\Target_2021\\project-kides\\src\\component\\footer.js",[],"E:\\Target_2021\\project-kides\\src\\Data\\Planets.js",[],"E:\\Target_2021\\project-kides\\src\\Data\\Flower.js",[],["94","95"],"E:\\Target_2021\\project-kides\\src\\Data\\Animals.js",[],"E:\\Target_2021\\project-kides\\src\\Data\\States.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"96","replacedBy":"102"},{"ruleId":"98","replacedBy":"103"},{"ruleId":"96","replacedBy":"104"},{"ruleId":"98","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":19,"nodeType":"108","messageId":"109","endLine":1,"endColumn":28},{"ruleId":"96","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":19,"nodeType":"108","messageId":"109","endLine":2,"endColumn":28},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],["114"],["115"],["114"],["115"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar",["114"],["115"],["114"],["115"],"no-global-assign","no-unsafe-negation"]