[{"E:\\Target_2021\\project-kides\\src\\index.js":"1","E:\\Target_2021\\project-kides\\src\\reportWebVitals.js":"2","E:\\Target_2021\\project-kides\\src\\App.js":"3","E:\\Target_2021\\project-kides\\src\\component\\navbar.js":"4","E:\\Target_2021\\project-kides\\src\\component\\tspractical.js":"5","E:\\Target_2021\\project-kides\\src\\pages\\about.js":"6","E:\\Target_2021\\project-kides\\src\\pages\\home.js":"7","E:\\Target_2021\\project-kides\\src\\pages\\error.js":"8","E:\\Target_2021\\project-kides\\src\\pages\\practice.js":"9","E:\\Target_2021\\project-kides\\src\\pages\\table.js":"10","E:\\Target_2021\\project-kides\\src\\pages\\words.js":"11","E:\\Target_2021\\project-kides\\src\\pages\\alphabets.js":"12","E:\\Target_2021\\project-kides\\src\\pages\\numbers.js":"13","E:\\Target_2021\\project-kides\\src\\component\\footer.js":"14","E:\\Target_2021\\project-kides\\src\\Data\\Planets.js":"15","E:\\Target_2021\\project-kides\\src\\Data\\Flower.js":"16","E:\\Target_2021\\project-kides\\src\\Data\\Animals.js":"17"},{"size":606,"mtime":1613454200114,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607178084168,"results":"20","hashOfConfig":"19"},{"size":1215,"mtime":1613539800594,"results":"21","hashOfConfig":"19"},{"size":1487,"mtime":1613717977397,"results":"22","hashOfConfig":"19"},{"size":4863,"mtime":1612879993705,"results":"23","hashOfConfig":"19"},{"size":932,"mtime":1613708493792,"results":"24","hashOfConfig":"19"},{"size":1496,"mtime":1613717884363,"results":"25","hashOfConfig":"19"},{"size":409,"mtime":1611940392348,"results":"26","hashOfConfig":"19"},{"size":3916,"mtime":1613581104175,"results":"27","hashOfConfig":"19"},{"size":4080,"mtime":1612794181055,"results":"28","hashOfConfig":"19"},{"size":4720,"mtime":1613708520782,"results":"29","hashOfConfig":"19"},{"size":2519,"mtime":1613708609587,"results":"30","hashOfConfig":"19"},{"size":4944,"mtime":1613708619455,"results":"31","hashOfConfig":"19"},{"size":507,"mtime":1613454194461,"results":"32","hashOfConfig":"19"},{"size":2162,"mtime":1613655440890,"results":"33","hashOfConfig":"19"},{"size":2923,"mtime":1613717101223,"results":"34","hashOfConfig":"19"},{"size":2162,"mtime":1613664716317,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"190wjy4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Target_2021\\project-kides\\src\\index.js",[],["77","78"],"E:\\Target_2021\\project-kides\\src\\reportWebVitals.js",[],["79","80"],"E:\\Target_2021\\project-kides\\src\\App.js",[],["81","82"],"E:\\Target_2021\\project-kides\\src\\component\\navbar.js",[],"E:\\Target_2021\\project-kides\\src\\component\\tspractical.js",[],["83","84"],"E:\\Target_2021\\project-kides\\src\\pages\\about.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\home.js",["85","86","87","88"],"E:\\Target_2021\\project-kides\\src\\pages\\error.js",["89"],"import {Container,Jumbotron} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport errorSvg from './error404.svg';\r\n \r\nimport './about.css';\r\n\r\nfunction Error() {\r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n          \r\n        <Container>\r\n\r\n        <img src={errorSvg} alt=\"error 404\" height=\"700\" />          \r\n\r\n        </Container>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","E:\\Target_2021\\project-kides\\src\\pages\\practice.js",[],"E:\\Target_2021\\project-kides\\src\\pages\\table.js",[],["90","91"],"E:\\Target_2021\\project-kides\\src\\pages\\words.js",["92","93","94"],"E:\\Target_2021\\project-kides\\src\\pages\\alphabets.js",["95","96","97"],"E:\\Target_2021\\project-kides\\src\\pages\\numbers.js",["98"],"/* eslint-disable no-mixed-operators */\r\nimport {Container,Jumbotron,Card,Row,Col,Accordion} from 'react-bootstrap';\r\nimport Navbar from '../component/navbar';\r\nimport Footer from '../component/footer';\r\nimport './about.css';\r\n\r\nfunction Numbers() {\r\n\r\n    const arr = x => Array.from(x);\r\n    const num = x => Number(x) || 0;\r\n    \r\n    const isEmpty = xs => xs.length === 0;\r\n    const take = n => xs => xs.slice(0,n);\r\n    const drop = n => xs => xs.slice(n);\r\n    const reverse = xs => xs.slice(0).reverse();\r\n    const comp = f => g => x => f (g (x));\r\n    const not = x => !x;\r\n    const chunk = n => xs =>\r\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk (n) (drop (n) (xs))];\r\n    \r\n    // numToWords :: (Number a, String a) => a -> String\r\n    let numToWords = n => {\r\n      \r\n      let a = [\r\n        '', 'One', 'Two', 'Three', 'Four',\r\n        'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n        'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\r\n        'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\r\n      ];\r\n      \r\n      let b = [\r\n        '', '', 'Twenty', 'Thirty', 'Forty',\r\n        'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\r\n      ];\r\n      \r\n      let g = [\r\n        '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\r\n        'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\r\n      ];\r\n      \r\n      // this part is really nasty still\r\n      // it might edit this again later to show how Monoids could fix this up\r\n      let makeGroup = ([ones,tens,huns]) => {\r\n        return [\r\n          num(huns) === 0 ? '' : a[huns] + ' hundred ',\r\n          num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\r\n          a[tens+ones] || a[ones]\r\n        ].join('');\r\n    };\r\n      \r\n      let thousand = (group,i) => group === '' ? group : `${group} ${g[i]}`;\r\n      \r\n      if (typeof n === 'number')\r\n        return numToWords(String(n));\r\n      else if (n === '0')\r\n        return 'zero';\r\n      else\r\n        return comp (chunk(3)) (reverse) (arr(n))\r\n          .map(makeGroup)\r\n          .map(thousand)\r\n          .filter(comp(not)(isEmpty))\r\n          .reverse()\r\n          .join(' ');\r\n    };\r\n     \r\n  return (\r\n    <div>    \r\n        <Navbar/>\r\n        \r\n        <br/>        \r\n<Container>\r\n         \r\n<Card className=\"mb-3 card-style\">\r\n        <Card.Body>        \r\n    <Row>\r\n    {[...Array(11)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n    </Card.Body>\r\n    </Card>\r\n    \r\n    <Accordion defaultActiveKey=\"0\">\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n      11 to 30\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(20)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i+11}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+11)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n      31 to 60\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(30)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'1rem'}}>\r\n              <Card.Title>{i+31}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+31)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n      61 to 100\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"2\">\r\n      <Card.Body>\r\n      <Row>\r\n    {[...Array(40)].map((x, i) =>\r\n          <Col md=\"2\" key={i} className=\"media-col\" >\r\n          <Card className=\"mb-3 card-style\">\r\n           \r\n            <Card.Body style={{padding:'0.5rem'}}>\r\n              <Card.Title>{i+61}</Card.Title>\r\n              <Card.Text>\r\n                   {numToWords(i+61)} \r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          </Col>\r\n        )}\r\n    </Row>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n \r\n</Container>\r\n    <Footer/>        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Numbers;\r\n","E:\\Target_2021\\project-kides\\src\\component\\footer.js",[],"E:\\Target_2021\\project-kides\\src\\Data\\Planets.js",[],"E:\\Target_2021\\project-kides\\src\\Data\\Flower.js",[],"E:\\Target_2021\\project-kides\\src\\Data\\Animals.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"99","replacedBy":"105"},{"ruleId":"101","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":9,"nodeType":"111","messageId":"112","endLine":1,"endColumn":12},{"ruleId":"109","severity":1,"message":"113","line":1,"column":13,"nodeType":"111","messageId":"112","endLine":1,"endColumn":16},{"ruleId":"109","severity":1,"message":"114","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":22},{"ruleId":"109","severity":1,"message":"115","line":1,"column":33,"nodeType":"111","messageId":"112","endLine":1,"endColumn":42},{"ruleId":"109","severity":1,"message":"115","line":1,"column":19,"nodeType":"111","messageId":"112","endLine":1,"endColumn":28},{"ruleId":"99","replacedBy":"116"},{"ruleId":"101","replacedBy":"117"},{"ruleId":"109","severity":1,"message":"114","line":2,"column":51,"nodeType":"111","messageId":"112","endLine":2,"endColumn":56},{"ruleId":"109","severity":1,"message":"118","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":15},{"ruleId":"109","severity":1,"message":"119","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":14},{"ruleId":"109","severity":1,"message":"115","line":5,"column":19,"nodeType":"111","messageId":"112","endLine":5,"endColumn":28},{"ruleId":"109","severity":1,"message":"114","line":5,"column":42,"nodeType":"111","messageId":"112","endLine":5,"endColumn":47},{"ruleId":"109","severity":1,"message":"120","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":12},{"ruleId":"109","severity":1,"message":"115","line":2,"column":19,"nodeType":"111","messageId":"112","endLine":2,"endColumn":28},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],["121"],["122"],["121"],["122"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Image' is defined but never used.","'Jumbotron' is defined but never used.",["121"],["122"],"'Animals' is defined but never used.","'akshay' is defined but never used.","'Test' is defined but never used.","no-global-assign","no-unsafe-negation"]